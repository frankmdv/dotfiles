local cmp = require("cmp")

require("luasnip.loaders.from_vscode").lazy_load()

cmp.setup({
	sources = {
		{ name = "path" },
		{ name = "nvim_lsp" },
		{ name = "nvim_lua" },
		{ name = "buffer", keyword_length = 3 },
		{ name = "luasnip" },
	},
	mapping = cmp.mapping.preset.insert({
		["<C-t>"] = cmp.mapping.scroll_docs(-4), -- Allows you to navigate up the documentation generated by CMP
		["<C-b>"] = cmp.mapping.scroll_docs(4), -- Allows you to navigate down the documentation generated by CMP
		["<C-Space>"] = cmp.mapping.complete(), -- Opens the autocompletion menu showing matches for the current string
		["<C-e>"] = cmp.mapping.abort(), -- Close the autocomplete menu
		["<CR>"] = cmp.mapping.confirm({ select = true }), -- Accept currently selected item. Set `select` to `false` to only confirm explicitly selected items
		["<Tab>"] = cmp.mapping.select_next_item(), -- The selection moves to the next match in the menu
		["<S-Tab>"] = cmp.mapping.select_prev_item(), -- The selection moves to the previous match in the menu
	}),
	formatting = {
		fields = { "abbr", "kind", "menu" }, -- Order of the fields in the CMP menu
		format = function(entry, item)
			-- Kind symbols
			local kind_symbols = {
				Text = "󰉿 ",
				Method = "󰆧 ",
				Function = "󰊕 ",
				Constructor = " ",
				Field = "󰜢 ",
				Variable = "󰀫 ",
				Class = "󰠱 ",
				Interface = " ",
				Module = " ",
				Property = "󰜢 ",
				Unit = "󰑭 ",
				Value = "󰎠 ",
				Enum = " ",
				Keyword = "󰌋 ",
				Snippet = " ",
				Color = "󰏘 ",
				File = "󰈙 ",
				Reference = "󰈇 ",
				Folder = "󰉋 ",
				EnumMember = " ",
				Constant = "󰏿 ",
				Struct = "󰙅 ",
				Event = " ",
				Operator = "󰆕 ",
			}
			item.kind = string.format("%s  %s", (kind_symbols[item.kind] or ""), item.kind)

			-- Menu symbols
			item.menu = ({
				nvim_lsp = "[LSP]",
				luasnip = "[LuaSnip]",
				buffer = "[Buffer]",
				path = "[Path]",
				nvim_lua = "[Lua]",
			})[entry.source.name]

			return item
		end,
	},
})
